<?xml version="1.0" encoding="utf-8"?>
<DS xmlns="http://www.eprosima.com/XMLSchemas/discovery-server" user_shutdown="false" >
  
  <!--
  
    According to the RTPS standard the WLP (Writer Liveliness Protocol) defines the required information exchange
    between two

    Participants in order to assert the liveliness of Writers contained by the Participants. This test assess this
    mechanism proper operation under client-server discovery. Basically two discovery-servers instances are launched:

    1 - A server with several clients that create subscribers of a common topic. This instances will take an snapshot at
    the beginning and another at the end.

    2 - A client which references the server on the first instance and creates a publisher for the common topic. This
    process would be killed from python between the snapshots. It's noteworthy that the lease-duration has been
    increased int the profiles to prevent the server from noticing that the client has disappeared.

    Both snapshots must show how all clients (remote one included) known each other and the user publishers and
    subscribers. Subscribers though are notified by the WLP that the crashed publisher is not responsive. By parsing the
    second snapshot we are able to verify that ``alive_count="0"`` there, that is, the subscribers were duly notified.

  -->

  <servers>
    <server name="server" profile_name="UDP server" />
  </servers>

  <clients>
    <client name="client1" profile_name="UDP client">
      <subscriber profile_name="subscriber profile" />
    </client>
    <client name="client2" profile_name="UDP client">
      <subscriber profile_name="subscriber profile" />
    </client>
  </clients>

  <snapshots file="test_9_server_snapshot.xml">
    <snapshot show_liveliness="true" time="3">Check the server has discovered everybody and all subscribers mark the publisher as alive</snapshot>
    <snapshot show_liveliness="true" time="7">Check publisher unresponsiveness is noticed by the publishers</snapshot>
  </snapshots>

  <profiles>
    
    <participant profile_name="UDP client" >
      <rtps>
        <builtin>
            <discovery_config>
                <discoveryProtocol>CLIENT</discoveryProtocol>
                <discoveryServersList>
                    <RemoteServer prefix="4D.49.47.55.45.4c.5f.42.41.52.52.4f">
                        <metatrafficUnicastLocatorList>
                            <locator>
                                <udpv4>
                                    <address>127.0.0.1</address>
                                    <port>${RANDOM_PORT}</port>
                                </udpv4>
                            </locator>
                        </metatrafficUnicastLocatorList>
                    </RemoteServer>
                </discoveryServersList>
                <leaseDuration>
                    <sec>3600</sec>
                </leaseDuration>
            </discovery_config>
        </builtin>
      </rtps>
    </participant>
    
    <participant profile_name="UDP server">
      <rtps>
        <prefix>
          4D.49.47.55.45.4c.5f.42.41.52.52.4f
        </prefix>
        <builtin>
            <discovery_config>
                <discoveryProtocol>SERVER</discoveryProtocol>
                <leaseDuration>
                    <sec>3600</sec>
                </leaseDuration>
            </discovery_config>
          <metatrafficUnicastLocatorList>
            <locator>
              <udpv4>
                <address>127.0.0.1</address>
                <port>${RANDOM_PORT}</port>
              </udpv4>
            </locator>
          </metatrafficUnicastLocatorList>
        </builtin>
      </rtps>
    </participant>

    <subscriber profile_name="subscriber profile">
      <topic>
        <name>test_topic</name>
        <dataType>sample_type</dataType> 
      </topic>
      <qos>
        <liveliness>
          <kind>AUTOMATIC</kind>
          <lease_duration>
            <sec>2</sec>
            <nanosec>0</nanosec>
          </lease_duration>
          <announcement_period>
            <sec>1</sec>
            <nanosec>0</nanosec>
          </announcement_period>
        </liveliness>
      </qos>
    </subscriber>

    <topic profile_name="test topic">
      <name>test_topic</name>
      <dataType>sample_type</dataType>
    </topic>
    
  </profiles>

  <types>
    <type>
      <union name="sample_type">
        <discriminator type="byte" />
        <case>
          <caseDiscriminator value="0" />
          <member name="index" type="uint32" />
        </case>
        <case>
          <caseDiscriminator value="1" />
          <member name="message" type="string" />
        </case>
      </union>
    </type>

  </types>
  
</DS>
